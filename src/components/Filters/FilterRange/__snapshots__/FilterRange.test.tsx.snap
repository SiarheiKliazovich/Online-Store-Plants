// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders filterRange component valueToSlider is 0  1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="filter__list"
      >
        <div
          class="form_control"
        >
          <div
            class="form_control_container__time"
          >
            1
          </div>
          ⟷
          <div
            class="form_control_container__time"
          >
            2
          </div>
        </div>
        <div
          class="range_container"
        >
          <div
            class="sliders_control"
          >
            <input
              id="fromSlider"
              max="5"
              min="4"
              type="range"
              value="3"
            />
            <input
              id="toSlider"
              max="8"
              min="7"
              type="range"
              value="8"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="filter__list"
    >
      <div
        class="form_control"
      >
        <div
          class="form_control_container__time"
        >
          1
        </div>
        ⟷
        <div
          class="form_control_container__time"
        >
          2
        </div>
      </div>
      <div
        class="range_container"
      >
        <div
          class="sliders_control"
        >
          <input
            id="fromSlider"
            max="5"
            min="4"
            type="range"
            value="3"
          />
          <input
            id="toSlider"
            max="8"
            min="7"
            type="range"
            value="8"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renders filterRange component valueToSlider not equal to 0  1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="filter__list"
      >
        <div
          class="form_control"
        >
          <div
            class="form_control_container__time"
          >
            1
          </div>
          ⟷
          <div
            class="form_control_container__time"
          >
            2
          </div>
        </div>
        <div
          class="range_container"
        >
          <div
            class="sliders_control"
          >
            <input
              id="fromSlider"
              max="5"
              min="4"
              type="range"
              value="3"
            />
            <input
              id="toSlider"
              max="8"
              min="7"
              type="range"
              value="6"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="filter__list"
    >
      <div
        class="form_control"
      >
        <div
          class="form_control_container__time"
        >
          1
        </div>
        ⟷
        <div
          class="form_control_container__time"
        >
          2
        </div>
      </div>
      <div
        class="range_container"
      >
        <div
          class="sliders_control"
        >
          <input
            id="fromSlider"
            max="5"
            min="4"
            type="range"
            value="3"
          />
          <input
            id="toSlider"
            max="8"
            min="7"
            type="range"
            value="6"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renders filterRange component when valueFromSlider is 0  1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="filter__list"
      >
        <div
          class="form_control"
        >
          <div
            class="form_control_container__time"
          >
            1
          </div>
          ⟷
          <div
            class="form_control_container__time"
          >
            2
          </div>
        </div>
        <div
          class="range_container"
        >
          <div
            class="sliders_control"
          >
            <input
              id="fromSlider"
              max="5"
              min="4"
              type="range"
              value="4"
            />
            <input
              id="toSlider"
              max="8"
              min="7"
              type="range"
              value="6"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="filter__list"
    >
      <div
        class="form_control"
      >
        <div
          class="form_control_container__time"
        >
          1
        </div>
        ⟷
        <div
          class="form_control_container__time"
        >
          2
        </div>
      </div>
      <div
        class="range_container"
      >
        <div
          class="sliders_control"
        >
          <input
            id="fromSlider"
            max="5"
            min="4"
            type="range"
            value="4"
          />
          <input
            id="toSlider"
            max="8"
            min="7"
            type="range"
            value="6"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`renders filterRange component when valueFromSlider not equal to 0  1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="filter__list"
      >
        <div
          class="form_control"
        >
          <div
            class="form_control_container__time"
          >
            1
          </div>
          ⟷
          <div
            class="form_control_container__time"
          >
            2
          </div>
        </div>
        <div
          class="range_container"
        >
          <div
            class="sliders_control"
          >
            <input
              id="fromSlider"
              max="5"
              min="4"
              type="range"
              value="3"
            />
            <input
              id="toSlider"
              max="8"
              min="7"
              type="range"
              value="6"
            />
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="filter__list"
    >
      <div
        class="form_control"
      >
        <div
          class="form_control_container__time"
        >
          1
        </div>
        ⟷
        <div
          class="form_control_container__time"
        >
          2
        </div>
      </div>
      <div
        class="range_container"
      >
        <div
          class="sliders_control"
        >
          <input
            id="fromSlider"
            max="5"
            min="4"
            type="range"
            value="3"
          />
          <input
            id="toSlider"
            max="8"
            min="7"
            type="range"
            value="6"
          />
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
